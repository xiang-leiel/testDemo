<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quantchi.tianji.service.search.dao.BusinessCardDao">

    <insert id="insert" parameterType="com.quantchi.tianji.service.search.model.database.BusinessCardDO">

      INSERT INTO inv_business_card (NAME,company_id, company,department,title,tel_cell,tel_work,addr,email,staff_id,city,category,is_leader,img_url)
      VALUES (#{name},#{companyId}, #{company},#{department},#{title},#{telCell},#{telWork},#{addr},#{email},#{staffId},#{city},#{category},#{isLeader},#{imgUrl})
    </insert>

    <select id="list" parameterType="java.util.Map" resultType="com.quantchi.tianji.service.search.model.database.BusinessCardDO">
        SELECT
            id,
            name,
            company,
            department,
            title,
            tel_cell,
            tel_work,
            addr,
            email,
            staff_id,
            create_time,
            city,category,is_leader,img_url
        FROM
            inv_business_card
        where 1=1
        <if test="city!=null and city != ''">
            and city = #{city}
        </if>
        <if test="category!=null and category != ''">
            and category = #{category}
        </if>
        <if test="company!=null and company != ''">
            and company = #{company}
        </if>
        <if test="staffId!=null and staffId != ''">
            and staff_id = #{staffId}
        </if>
        order by create_time desc
    </select>

    <select id="getOne" parameterType="java.lang.Integer" resultType="com.quantchi.tianji.service.search.model.database.BusinessCardDO">
        SELECT
            id,
            addr,
            company,
            department,
            email,
            NAME,
            tel_cell,
            title,
            tel_work,
            create_time,
            staff_id,
            city,category,is_leader,img_url
        FROM
            inv_business_card
        WHERE
            id = #{id}
    </select>

    <select id="getUserCardStatisticsList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            company,
            COUNT(id) AS count
        FROM
            inv_business_card
        WHERE
        company != ''
        <if test="city!=null and city != ''">
            and city = #{city}
        </if>
        <if test="category!=null and category != ''">
            and category = #{category}
        </if>
        <if test="staffId!=null and staffId != ''">
            and staff_id = #{staffId}
        </if>
        <if test="staffId == null">
          and  is_leader=0
        </if>
        GROUP BY
            company
        ORDER BY
            count DESC
    </select>

    <insert id="insertUserCardInfo" parameterType="java.util.Map">
        INSERT INTO inv_user_card (
            staff_id,
            card_id,
            type,
            location,
            create_time,
            update_time
        )
        VALUE
            (#{staffId}, #{cardId}, #{type},#{location}, #{createTime}, #{updateTime})
    </insert>
    <update id="updateUserCardInfo" parameterType="java.util.Map">
        UPDATE inv_user_card
        SET
        <if test="type != null">
            type = #{type},
        </if>
        <if test="remarkText != null">
            remarkText = #{remarkText},
        </if>
         update_time = #{updateTime}
        WHERE
            id = #{id}
    </update>

    <select id="getLeaderCardList" parameterType="java.util.Map" resultType="com.quantchi.tianji.service.search.model.database.BusinessCardDO">
        SELECT
            c.id,
            addr,
            company,
            department,
            email,
            NAME,
            tel_cell,
            title,
            tel_work,
            c.create_time,
            city,category,c.is_leader,c.img_url
        FROM
            inv_user_card u
        , inv_business_card c
        WHERE
        u.card_id = c.id and
            u.type = 1
        AND u.staff_id = #{staffId}
        <if test="city!=null and city != ''">
            and city = #{city}
        </if>
        <if test="category!=null and category != ''">
            and category = #{category}
        </if>
        <if test="company!=null and company != ''">
            and company = #{company}
        </if>
        order by c.create_time desc
    </select>

    <select id="getLeaderCardStatisticsList" parameterType="java.util.Map" resultType="java.util.Map">

        SELECT
            company,
            COUNT(c.id) AS count
        FROM
            inv_user_card u
        LEFT JOIN inv_business_card c ON u.card_id = c.id
        WHERE
            u.type = 1
        AND u.staff_id = #{staffId}
        <if test="city!=null and city != ''">
            and city = #{city}
        </if>
        <if test="category!=null and category != ''">
            and category = #{category}
        </if>
        GROUP BY
            company
        ORDER BY
            count DESC
    </select>

    <select id="getApplyCardStatisticsList" parameterType="java.util.Map" resultType="java.util.Map">
SELECT
	c.id,
	card_id AS cardId,
	addr,
	company companyName,
	department,
	email,
	NAME personName,
	tel_cell telCell,
	title AS companyPosition,
	tel_work telWork,
	DATE_FORMAT(c.create_time,'%Y-%m-%d %H:%i:%s') uploadTime,
  if(card_id is null,0,count(c.id)) count
FROM
	inv_business_card c
LEFT JOIN inv_user_card u ON c.id = u.card_id
WHERE
	c.staff_id = #{staffId}
AND (type = 0 OR type IS NULL)
GROUP BY
	c.id
order by count desc
    </select>

    <select id="getApplyCardList" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
        uc.id id,
        u.`name` AS applyName,
        DATE_FORMAT(uc.create_time,'%Y-%m-%d %H:%i:%s') as applyTime,
        uc.location,
        c.addr,
        c.company companyName,
        c.department,
        c.title companyPosition,
        DATE_FORMAT(c.create_time,'%Y-%m-%d %H:%i:%s') AS createTime,
        c.`name` AS cardName
        FROM
        inv_user_card uc,
        inv_business_card c,
        inv_ding_user u
        WHERE
        uc.card_id = c.id
        AND uc.staff_id = u.id
        and uc.type=0
        <if test="cardId != null">
         and   card_id = #{cardId}
        </if>
        <if test="staffId != null">
         and  card_id IN (
            SELECT
            id
            FROM
            inv_business_card
            WHERE
            staff_id = #{staffId}
            )
        </if>
    </select>
    <select id="countApplyCardNum" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT
            COUNT(id)
        FROM
            inv_user_card
        WHERE
            staff_id = #{staffId}
            <if test="type != null">
                and type = 1
            </if>
    </select>

    <select id="getUserCardStatisticsCountByCondition" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        <if test="type=='category'">
             category as  `key`,
        </if>
        <if test="type=='city'">
             city as  `key`,
        </if>
            COUNT(id) as count
        FROM
            inv_business_card
        where 1=1
        <if test="staffId != null">
           and staff_id = #{staffId}
        </if>
        <if test="staffId == null">
            and  is_leader=0
        </if>
        <if test="type=='category'">
            and category != ""
            GROUP BY category
        </if>
        <if test="type=='city'">
            and city != ""
            GROUP BY city
        </if>

        ORDER BY count desc
    </select>

    <select id="countLeaderApplyedNum" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT
            COUNT(id)
        FROM
            inv_user_card
        WHERE
            card_id IN (
                SELECT
                    id
                FROM
                    inv_business_card
                WHERE
                    staff_id = #{staffId}
            )
    </select>

    <select id="getPassApplyCompanyList" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            bc.staff_id staffId,
            u.`name`,
            bc.company_id companyId,
            bc.company,
            bc.title companyPosition,
            bc.`name` cardName,
            MAX(bc.update_time) `date`
        FROM
            (
                SELECT
                    c.company_id,
                    c.company,
                    c.title,
                    c.`name`,
										uc.staff_id,
                    uc.update_time
                FROM
                    inv_business_card c,
                    inv_user_card uc
                WHERE
                    c.id = uc.card_id
                AND c.staff_id = #{staffId}
                AND uc.type = 1
            ) bc,inv_ding_user u
        WHERE
            bc.staff_id = u.id
        GROUP BY
            bc.company,
            bc.title,
            bc.`name`
    </select>

    <update id="automaticPassApplyTask" parameterType="java.util.Map">
        UPDATE inv_user_card
        SET type = 1
        WHERE
            card_id IN (
                SELECT
                    id
                FROM
                    inv_business_card
                WHERE
                    staff_id IN (
                        SELECT
                            staff_id
                        FROM
                            inv_scheduled_user
                    )
            ) and create_time > #{date}
    </update>

    <insert id="addAutomaticPassApply" parameterType="java.util.Map" >
        INSERT INTO inv_scheduled_user (staff_id, create_time)
        VALUES
            (#{staffId}, #{createTime})
    </insert>

    <delete id="deleteAutomaticPassApply" parameterType="java.util.Map">
        DELETE
        FROM
            inv_scheduled_user
        WHERE
            staff_id = #{staffId}
    </delete>
</mapper>