<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quantchi.tianji.service.search.dao.UserDao">

    <insert id="insertList" parameterType="com.quantchi.tianji.service.search.model.User">
        INSERT INTO inv_ding_user (id, name, department_id, mobile, password)
        VALUES
            <foreach collection="allUsers" item="user"  separator=",">
                (#{user.id},#{user.name},#{user.departmentId},#{user.mobile},#{user.password})
            </foreach>
        ON DUPLICATE KEY UPDATE
        department_id = values(department_id),
        mobile = values(mobile),
        name = values(name)
    </insert>

    <delete id="deleteAll">
        delete from inv_ding_user
    </delete>

    <select id="getUserName" parameterType="java.lang.String" resultType="java.lang.String">
        select name from inv_ding_user where id in (#{ids})
    </select>

    <update id="updateAllUser" parameterType="com.quantchi.tianji.service.search.model.User">
        <foreach collection="list" item="user" index="index" open="" close="" separator=";">
            UPDATE inv_ding_user
              set  department_id=#{user.departmentId},mobile=#{user.moile},name=#{user.name}
            where
                id = #{user.id}
        </foreach>
    </update>

    <select id="listUsers" parameterType="com.quantchi.tianji.service.search.model.User" resultType="com.quantchi.tianji.service.search.model.User">
        select id,name,mobile,department_id,password from inv_ding_user <where><if test="id!=null">id=#{id}</if> </where> ;
    </select>

    <select id="getUserInfo" parameterType="string" resultType="com.quantchi.tianji.service.search.model.User">
        SELECT
            ue.id,
            ue.`name`,
            ue.mobile,
            ue.`name` AS departName,
            ue.role_name,
            ue.follow_company_card_num,
            ue.apply_card_num,
            ue.upload_card_num,
            ue.message_time,
            ue.channel_time,
            ue.index_notice_time,
            de.img_url
        FROM
            (
                SELECT
                    u.id,
                    u.`name`,
                    u.mobile,
                    d.`name` AS departName,
                    r.role_name,
                    u.follow_company_card_num,
                    u.apply_card_num,
                    u.upload_card_num,
                    u.message_time,
                    u.channel_time,
                    u.index_notice_time
                FROM
                    inv_ding_user u,
                    inv_ding_depart d,
                    inv_ding_role r
                WHERE
                    u.id = #{userId}
                AND u.department_id = d.id
                AND d.`id` = r.depart_id
            ) ue
        LEFT JOIN inv_user_detail de ON ue.id = de.user_id
    </select>

    <select id="listFollowCompanys" parameterType="string" resultType="com.quantchi.tianji.service.search.model.CompanyFollower">
        SELECT
            id,
            staff_id,
            STATUS,
            create_time,
            update_time,
            `from`,
            company_id,
            origin
        FROM
            company_follower
        WHERE
            staff_id = #{staffId} ORDER BY create_time desc
    </select>

    <update id="saveUserLocation" >
        UPDATE inv_user_detail
        SET latitude=#{latitude}, longitude=#{longitude}
        WHERE
            user_id = #{staffId}
    </update>

    <insert id="followCompany">
        INSERT INTO company_follower (staff_id, company_id, status, `from`, origin)
        VALUES
            (#{userId}, #{companyId},1,#{from}, #{origin})
    </insert>

    <delete id="unFollowCompany" >
        DELETE
        FROM
            company_follower
        WHERE
            staff_id = #{userId} and company_id=#{companyId}
    </delete>

    <select id="listCompanysFollowed" resultType="string">
          SELECT
            company_id
        FROM
            company_follower
        WHERE
            staff_id = #{staffId}
    </select>

    <select id="listCompanysFollowedByTime" resultType="string">
          SELECT
            company_id
        FROM
            company_follower
        WHERE
            staff_id = #{staffId}
            <if test="channelTime!=null">
                and create_time>#{channelTime}
            </if>

    </select>

    <select id="getUserDetail" parameterType="string" 
            resultType="com.quantchi.tianji.service.search.model.UserDetail">
        select * from  inv_ding_user u where u.id = #{staffId};
    </select>

    <select id="getUserDetailByMobile" parameterType="string" resultType="com.quantchi.tianji.service.search.model.UserDetail">
        select * from inv_user_detail d, inv_ding_user u where d.user_id = u.id and u.mobile = #{mobile};
    </select>

    <select id="getUserDetailInfoByUserId" parameterType="string"
            resultType="com.quantchi.tianji.service.search.model.UserDetail">
        select * from  inv_user_detail d,inv_ding_user u, inv_ding_role r where
        d.user_id = u.id and u.department_id = r.depart_id
        and d.user_id = #{userId};
    </select>

    <update id="updateTime" parameterType="com.quantchi.tianji.service.search.model.UserDetail">
        UPDATE inv_ding_user
        SET <if test="messageTime!=null">
        message_time = #{messageTime}
       </if>
         <if test="indexNoticeTime!=null">
        index_notice_time = #{indexNoticeTime}
       </if>
        <if test="channelTime!=null">
            channel_time = #{channelTime}
        </if> where id =#{userId}
    </update>

    <update id="updateUserFollowCompanyCardNum" parameterType="java.util.Map">
        UPDATE inv_ding_user
        <if test="followCompanyCardNum != null">
            SET follow_company_card_num = #{followCompanyCardNum}
        </if>
        <if test="applyCardNum != null">
            SET apply_card_num = #{applyCardNum}
        </if>
        <if test="companyId != null">
            SET follow_company_card_num = follow_company_card_num + 1
        </if>
        <if test="cardNum != null">
            set apply_card_num = apply_card_num + 1
        </if>
        WHERE
            id IN (
        <if test="companyId != null">
            SELECT
            staff_id
            FROM
            company_follower
            WHERE
            company_id = #{companyId}
        </if>
        <if test="userId != null">
            #{userId}
        </if>
        <if test="cardNum != null and pass!= null">
            SELECT
            staff_id
            FROM
            inv_user_card
            WHERE
            id = #{id}
        </if>
        <if test="cardId != null">
            SELECT
            staff_id
            FROM
            inv_business_card
            WHERE
            id = #{cardId}
        </if>
            )
    </update>

    <update id="updateUserUploadLeaderCardNum" parameterType="java.util.Map" >
        UPDATE inv_ding_user
        SET
        <if test="staffId != null">
            upload_card_num = 0,
            apply_card_num = 0
            where  id = #{staffId}
        </if>
        <if test="staffId == null">
            upload_card_num = upload_card_num + 1
        </if>

    </update>

    <insert id="insertUserBasicDetail" parameterType="java.util.Map">
        INSERT INTO inv_user_detail (
            user_id
        <if test="latitude != null">
            ,latitude
        </if>
        <if test="longitude != null">
            ,longitude
        </if>
        <if test="sex != null">
            ,sex
        </if>
        <if test="messageTime != null">
            ,message_time
        </if>
        <if test="channelTime != null">
            ,channel_time
        </if>
        <if test="imgUrl != null">
            ,img_url
        </if>
        <if test="group != null">
            ,`group`
        </if>
        <if test="birthday != null">
            ,birthday
        </if>
        <if test="nativePlace != null">
            ,native_place
        </if>
        <if test="dockingEnterpriseTotal != null">
            ,docking_enterprise_total
        </if>
        <if test="merchantsValue != null">
            ,merchants_value
        </if>
        <if test="successBusinessNum != null">
            ,success_business_num
        </if>
        <if test="region != null">
            ,region
        </if>
        )
        VALUE
            (
            #{userId}
            <if test="latitude != null">
                ,#{latitude}
            </if>
            <if test="longitude != null">
                ,#{longitude}
            </if>
            <if test="sex != null">
                ,#{sex}
            </if>
            <if test="messageTime != null">
                ,#{messageTime}
            </if>
            <if test="channelTime != null">
                ,#{channelTime}
            </if>
            <if test="imgUrl != null">
                ,#{imgUrl}
            </if>
            <if test="group != null">
                ,#{group}
            </if>
            <if test="birthday != null">
                ,#{birthday}
            </if>
            <if test="nativePlace != null">
                ,#{nativePlace}
            </if>
            <if test="dockingEnterpriseTotal != null">
                ,#{dockingEnterpriseTotal}
            </if>
            <if test="merchantsValue != null">
                ,#{merchantsValue}
            </if>
            <if test="successBusinessNum != null">
                ,#{successBusinessNum}
            </if>
            <if test="region != null">
            ,#{region}
            </if>
            ) ON DUPLICATE KEY UPDATE
        user_id = #{userId}
        <if test="latitude != null">
            ,latitude = #{latitude}
        </if>
        <if test="longitude != null">
            ,longitude = #{longitude}
        </if>
        <if test="sex != null">
           , sex = #{sex}
        </if>
        <if test="messageTime != null">
            ,message_time = #{messageTime}
        </if>
        <if test="channelTime != null">
            ,channel_time = #{channelTime}
        </if>
        <if test="imgUrl != null">
            ,img_url = #{imgUrl}
        </if>
        <if test="group != null">
            ,`group` = #{group}
        </if>
        <if test="birthday != null">
            ,birthday = #{birthday}
        </if>
        <if test="nativePlace != null">
            ,native_place = #{nativePlace}
        </if>
        <if test="dockingEnterpriseTotal != null">
            ,docking_enterprise_total= #{dockingEnterpriseTotal}
        </if>
        <if test="merchantsValue != null">
            ,merchants_value = #{merchantsValue}
        </if>
        <if test="successBusinessNum != null">
            ,success_business_num = #{successBusinessNum}
        </if>
        <if test="region != null">
            ,region = #{region}
        </if>

    </insert>
    <resultMap id="UserDetail"  type="com.quantchi.tianji.service.search.model.UserDetail">
        <result property="name" column="name"/>
        <result property="roleName" column="roleName"/>
        <result property="group" column="group"/>
        <result property="imgUrl" column="img_url"/>
        <result property="userId" column="user_id"/>
        <result property="sex" column="sex"/>
        <result property="birthday" column="birthday"/>
        <result property="nativePlace" column="native_place"/>
        <result property="successBusinessNum" column="success_business_num"/>
        <result property="dockingEnterpriseTotal" column="docking_enterprise_total"/>
        <result property="merchantsValue" column="merchants_value"/>
        <collection property="userEducations" javaType="java.util.List" ofType="com.quantchi.tianji.service.search.model.UserEducation" >
            <id column="ue_id" property="ueId" />
            <result property="userId" column="ue_user_id"/>
            <result property="school" column="school"/>
            <result property="education" column="education"/>
            <result property="major" column="major"/>
            <result property="startTime" column="ue_start_time"/>
            <result property="endTime" column="ue_end_time"/>
        </collection>
        <collection property="userWorks" javaType="java.util.List" ofType="com.quantchi.tianji.service.search.model.UserWork"  >
            <id column="uw_id" property="uwId" />
            <result property="userId" column="uw_user_id"/>
            <result property="company" column="uw_company"/>
            <result property="position" column="position"/>
            <result property="startTime" column="uw_start_time"/>
            <result property="endTime" column="uw_end_time"/>
        </collection>
        <collection property="userCities" javaType="java.util.List" ofType="com.quantchi.tianji.service.search.model.UserCity" >
            <id column="uc_id" property="ucId" />
            <result property="userId" column="uc_user_id"/>
            <result property="city" column="city"/>
            <result property="startTime" column="uc_start_time"/>
            <result property="endTime" column="uc_end_time"/>
        </collection>
        <collection property="userBusinesses" javaType="java.util.List" ofType="com.quantchi.tianji.service.search.model.UserBusiness" >
            <id column="ub_id" property="ubId" />
            <result property="userId" column="ub_user_id"/>
            <result property="company" column="ub_company"/>
            <result property="date" column="date"/>
        </collection>
    </resultMap>

    <select id="getUserBasicDetail" parameterType="java.lang.String" resultMap="UserDetail">
          SELECT
	u.`name` ,
	r.role_name AS roleName,
	d.`group` ,
	d.img_url,
	u.id user_id,
	d.sex,
	d.birthday,
	d.native_place,
	d.success_business_num,
	d.docking_enterprise_total,
	d.merchants_value,
	ue.ue_id,
	ue.user_id ue_user_id,
	ue.school,
	ue.education,
	ue.major,
	ue.start_time ue_start_time,
	ue.end_time ue_end_time,
	uw.uw_id,
	uw.user_id uw_user_id,
	uw.company uw_company,
	uw.position,
	uw.start_time uw_start_time,
	uw.end_time uw_end_time,
	uc.uc_id,
	uc.user_id uc_user_id,
	uc.city,
	uc.start_time uc_start_time,
	uc.end_time uc_end_time,
	ub.ub_id,
	ub.user_id ub_user_id,
	ub.company ub_company,
	ub.date

FROM
	inv_ding_user u
	left  join inv_user_detail d on u.id = d.user_id
	left  join inv_ding_role r on u.department_id = r.depart_id
	left  join inv_user_business ub on u.id = ub.user_id
	left  join inv_user_city uc on u.id = uc.user_id
	left  join inv_user_education ue on  u.id = ue.user_id
	left  join inv_user_work uw on u.id = uw.user_id
WHERE
	u.id = #{userId}
    </select>

    <select id="getUserEducations" parameterType="java.lang.String" resultType="com.quantchi.tianji.service.search.model.UserEducation">
        SELECT
            *
        FROM
            inv_user_education
        WHERE
            user_id = #{userId}
    </select>
    <select id="getUserWorks" parameterType="java.lang.String" resultType="com.quantchi.tianji.service.search.model.UserWork">
        SELECT
            *
        FROM
            inv_user_work
        WHERE
            user_id = #{userId}
    </select>
    <select id="getUserCities" parameterType="java.lang.String" resultType="com.quantchi.tianji.service.search.model.UserCity">
        SELECT
            *
        FROM
            inv_user_city
        WHERE
            user_id = #{userId}
    </select>
    <select id="getUserBusinesses" parameterType="java.lang.String" resultType="com.quantchi.tianji.service.search.model.UserBusiness">
        SELECT
            *
        FROM
            inv_user_business
        WHERE
            user_id = #{userId}
    </select>

    <insert id="insertUserEducationInfo" parameterType="java.util.Map">
        INSERT into inv_user_education(user_id, school,education, major,start_time, end_time)
        VALUES(#{userId},#{school},#{education}, #{major}, #{startTime}, #{endTime})
    </insert>

    <update id="updateUserEducationInfo" parameterType="java.util.Map">
        update inv_user_education
        set user_id = #{userId}
        <if test="school != null">
            ,school = #{school}
        </if>
        <if test="education != null">
            ,education = #{education}
        </if>
        <if test="major != null">
            ,major = #{major}
        </if>
        <if test="startTime != null">
            ,start_time = #{startTime}
        </if>
        <if test="endTime != null">
            ,end_time = #{endTime}
        </if>
        where  ue_id = #{id}
    </update>

    <insert id="insertUserWorkInfo" parameterType="java.util.Map">
        INSERT into inv_user_work(user_id, company,position, start_time, end_time)
        VALUES(#{userId},#{company},#{position}, #{startTime}, #{endTime})
    </insert>
<update id="updateUserWorkInfo" parameterType="java.util.Map">
    update inv_user_work
    set
    user_id = #{userId}
    <if test="company != null">
        ,company = #{company}
    </if>
    <if test="position != null">
        ,position = #{position}
    </if>
    <if test="startTime != null">
        ,start_time = #{startTime}
    </if>
    <if test="endTime != null">
        ,end_time = #{endTime}
    </if>
    where uw_id = #{id}
</update>
    <insert id="insertUserCityInfo" parameterType="java.util.Map">
        INSERT into inv_user_city(user_id, city,start_time, end_time)
        VALUES(#{userId},#{city}, #{startTime}, #{endTime})
    </insert>
<update id="updateUserCityInfo" parameterType="java.util.Map">
    update inv_user_city
    set user_id = #{userId}
    <if test="city != null">
        ,city = #{city}
    </if>
    <if test="startTime != null">
        ,start_time = #{startTime}
    </if>
    <if test="endTime != null">
        ,end_time = #{endTime}
    </if>
    where uc_id = #{id}
</update>
<insert id="insertUserBusinessInfo" parameterType="java.util.Map">
    INSERT into inv_user_business(user_id, company, `date`)
    VALUES(#{userId},#{company}, #{date})
</insert>
<update id="updateUserBusinessInfo" parameterType="java.util.Map">
    update inv_user_business
    set user_id = #{userId}
    <if test="company != null">
        ,company = #{company}
    </if>
    <if test="date != null">
        ,date = #{date}
    </if>
    where ub_id = #{id}
</update>

    <delete id="deleteUserEducationById" parameterType="java.lang.Integer">
        delete from inv_user_education where ue_id = #{id}
    </delete>
    <delete id="deleteUserWorkById" parameterType="java.lang.Integer">
        delete from inv_user_work where uw_id = #{id}
    </delete>
    <delete id="deleteUserCityById" parameterType="java.lang.Integer">
        delete from inv_user_city where uc_id = #{id}
    </delete>
    <delete id="deleteUserBusinessInfoById" parameterType="java.lang.Integer">
        delete from inv_user_business where ub_id = #{id}
    </delete>

    <select id="getAutoPassApply" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT
            count(staff_id)
        FROM
            inv_scheduled_user
        WHERE
            staff_id = #{staffId}
    </select>

    <select id="getGroupNum" resultType="java.util.Map">
        SELECT
            COUNT(user_id) count,
            `group`
        FROM
            inv_user_detail
        WHERE
            `group` IS NOT NULL
        AND `group` != ''
        GROUP BY
            `group`
    </select>

    <select id="getGroupInfo" resultType="java.lang.String">
        select distinct `group` from inv_user_detail where `group` is not null
    </select>
    <update id="updateForJob">
        update inv_user_detail
        set
        <if test="latitude != null">
            latitude = #{latitude},
        </if>
        <if test="longitude != null">
            longitude = #{longitude},
        </if>
        <if test="job != null">
            job = #{job},
        </if>
        <if test="location != null">
            location = #{location},
        </if>
        <if test="updateTime != null">
            update_time = #{updateTime}
        </if>
        where user_id = #{staffId}
    </update>

    <select id="getStaffIdByName" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT id
        FROM
        inv_ding_user
        WHERE
        `name` = #{name}
    </select>

    <select id="getUserByStaffId" parameterType="java.lang.String" resultType="java.lang.String">
        select mobile from inv_ding_user where id = #{id}
    </select>
</mapper>