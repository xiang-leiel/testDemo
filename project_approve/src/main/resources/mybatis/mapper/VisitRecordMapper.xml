<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quantchi.tianji.service.search.dao.VisitRecordMapper">
  <resultMap id="BaseResultMap" type="com.quantchi.tianji.service.search.model.VisitRecord">
    <!--@mbg.generated-->
    <!--@Table visit_record-->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="staff_id" jdbcType="VARCHAR" property="staffId" />
    <result column="visit_partner" jdbcType="VARCHAR" property="visitPartner" />
    <result column="visit_name" jdbcType="VARCHAR" property="visitName" />
    <result column="visit_type" jdbcType="INTEGER" property="visitType" />
    <result column="img_url" jdbcType="VARCHAR" property="imgUrl" />
    <result column="visit_location" jdbcType="VARCHAR" property="visitLocation" />
    <result column="visit_latitude" jdbcType="DOUBLE" property="visitLatitude" />
    <result column="visit_longitude" jdbcType="DOUBLE" property="visitLongitude" />
    <result column="visit_status" jdbcType="INTEGER" property="visitStatus" />
    <result column="record_type" jdbcType="INTEGER" property="recordType" />
    <result column="isDelete" jdbcType="INTEGER" property="isdelete" />
    <result column="visit_time" jdbcType="TIMESTAMP" property="visitTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="company_id" jdbcType="VARCHAR" property="companyId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="status_remark" jdbcType="VARCHAR" property="statusRemark" />
    <result column="report_time" jdbcType="TIMESTAMP" property="reportTime" />
    <result column="together" jdbcType="INTEGER" property="together" />
    <result column="master_id" jdbcType="VARCHAR" property="masterId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, staff_id, visit_partner, visit_name, visit_type, img_url, visit_location, visit_latitude, 
    visit_longitude, visit_status, record_type, isDelete, visit_time, create_time, update_time, 
    company_id, `status`, status_remark, report_time, together, master_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from visit_record
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--@mbg.generated-->
    delete from visit_record
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.quantchi.tianji.service.search.model.VisitRecord">
    <!--@mbg.generated-->
    insert into visit_record (id, staff_id, visit_partner, 
      visit_name, visit_type, img_url, 
      visit_location, visit_latitude, visit_longitude, 
      visit_status, record_type, isDelete, 
      visit_time, create_time, update_time, 
      company_id, `status`, status_remark, 
      report_time, together, master_id
      )
    values (#{id,jdbcType=VARCHAR}, #{staffId,jdbcType=VARCHAR}, #{visitPartner,jdbcType=VARCHAR}, 
      #{visitName,jdbcType=VARCHAR}, #{visitType,jdbcType=INTEGER}, #{imgUrl,jdbcType=VARCHAR}, 
      #{visitLocation,jdbcType=VARCHAR}, #{visitLatitude,jdbcType=DOUBLE}, #{visitLongitude,jdbcType=DOUBLE}, 
      #{visitStatus,jdbcType=INTEGER}, #{recordType,jdbcType=INTEGER}, #{isdelete,jdbcType=INTEGER}, 
      #{visitTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{companyId,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{statusRemark,jdbcType=VARCHAR}, 
      #{reportTime,jdbcType=TIMESTAMP}, #{together,jdbcType=INTEGER}, #{masterId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.quantchi.tianji.service.search.model.VisitRecord">
    <!--@mbg.generated-->
    insert into visit_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="staffId != null">
        staff_id,
      </if>
      <if test="visitPartner != null">
        visit_partner,
      </if>
      <if test="visitName != null">
        visit_name,
      </if>
      <if test="visitType != null">
        visit_type,
      </if>
      <if test="imgUrl != null">
        img_url,
      </if>
      <if test="visitLocation != null">
        visit_location,
      </if>
      <if test="visitLatitude != null">
        visit_latitude,
      </if>
      <if test="visitLongitude != null">
        visit_longitude,
      </if>
      <if test="visitStatus != null">
        visit_status,
      </if>
      <if test="recordType != null">
        record_type,
      </if>
      <if test="isdelete != null">
        isDelete,
      </if>
      <if test="visitTime != null">
        visit_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="statusRemark != null">
        status_remark,
      </if>
      <if test="reportTime != null">
        report_time,
      </if>
      <if test="together != null">
        together,
      </if>
      <if test="masterId != null">
        master_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="staffId != null">
        #{staffId,jdbcType=VARCHAR},
      </if>
      <if test="visitPartner != null">
        #{visitPartner,jdbcType=VARCHAR},
      </if>
      <if test="visitName != null">
        #{visitName,jdbcType=VARCHAR},
      </if>
      <if test="visitType != null">
        #{visitType,jdbcType=INTEGER},
      </if>
      <if test="imgUrl != null">
        #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="visitLocation != null">
        #{visitLocation,jdbcType=VARCHAR},
      </if>
      <if test="visitLatitude != null">
        #{visitLatitude,jdbcType=DOUBLE},
      </if>
      <if test="visitLongitude != null">
        #{visitLongitude,jdbcType=DOUBLE},
      </if>
      <if test="visitStatus != null">
        #{visitStatus,jdbcType=INTEGER},
      </if>
      <if test="recordType != null">
        #{recordType,jdbcType=INTEGER},
      </if>
      <if test="isdelete != null">
        #{isdelete,jdbcType=INTEGER},
      </if>
      <if test="visitTime != null">
        #{visitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="statusRemark != null">
        #{statusRemark,jdbcType=VARCHAR},
      </if>
      <if test="reportTime != null">
        #{reportTime,jdbcType=TIMESTAMP},
      </if>
      <if test="together != null">
        #{together,jdbcType=INTEGER},
      </if>
      <if test="masterId != null">
        #{masterId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.quantchi.tianji.service.search.model.VisitRecord">
    <!--@mbg.generated-->
    update visit_record
    <set>
      <if test="staffId != null">
        staff_id = #{staffId,jdbcType=VARCHAR},
      </if>
      <if test="visitPartner != null">
        visit_partner = #{visitPartner,jdbcType=VARCHAR},
      </if>
      <if test="visitName != null">
        visit_name = #{visitName,jdbcType=VARCHAR},
      </if>
      <if test="visitType != null">
        visit_type = #{visitType,jdbcType=INTEGER},
      </if>
      <if test="imgUrl != null">
        img_url = #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="visitLocation != null">
        visit_location = #{visitLocation,jdbcType=VARCHAR},
      </if>
      <if test="visitLatitude != null">
        visit_latitude = #{visitLatitude,jdbcType=DOUBLE},
      </if>
      <if test="visitLongitude != null">
        visit_longitude = #{visitLongitude,jdbcType=DOUBLE},
      </if>
      <if test="visitStatus != null">
        visit_status = #{visitStatus,jdbcType=INTEGER},
      </if>
      <if test="recordType != null">
        record_type = #{recordType,jdbcType=INTEGER},
      </if>
      <if test="isdelete != null">
        isDelete = #{isdelete,jdbcType=INTEGER},
      </if>
      <if test="visitTime != null">
        visit_time = #{visitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="statusRemark != null">
        status_remark = #{statusRemark,jdbcType=VARCHAR},
      </if>
      <if test="reportTime != null">
        report_time = #{reportTime,jdbcType=TIMESTAMP},
      </if>
      <if test="together != null">
        together = #{together,jdbcType=INTEGER},
      </if>
      <if test="masterId != null">
        master_id = #{masterId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.quantchi.tianji.service.search.model.VisitRecord">
    <!--@mbg.generated-->
    update visit_record
    set staff_id = #{staffId,jdbcType=VARCHAR},
      visit_partner = #{visitPartner,jdbcType=VARCHAR},
      visit_name = #{visitName,jdbcType=VARCHAR},
      visit_type = #{visitType,jdbcType=INTEGER},
      img_url = #{imgUrl,jdbcType=VARCHAR},
      visit_location = #{visitLocation,jdbcType=VARCHAR},
      visit_latitude = #{visitLatitude,jdbcType=DOUBLE},
      visit_longitude = #{visitLongitude,jdbcType=DOUBLE},
      visit_status = #{visitStatus,jdbcType=INTEGER},
      record_type = #{recordType,jdbcType=INTEGER},
      isDelete = #{isdelete,jdbcType=INTEGER},
      visit_time = #{visitTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      company_id = #{companyId,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      status_remark = #{statusRemark,jdbcType=VARCHAR},
      report_time = #{reportTime,jdbcType=TIMESTAMP},
      together = #{together,jdbcType=INTEGER},
      master_id = #{masterId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="countByStatffId" parameterType="Object" resultType="java.lang.Integer">
    select count(1) from visit_record
    <where> 1=1
      <if test="staffId != null">
        AND staff_id = #{staffId}
      </if>
      <if test="visitStatus != null">
        AND visit_status = #{visitStatus}
      </if>
    </where>
  </select>

  <resultMap id="projectInfoMap" type="com.quantchi.tianji.service.search.model.vo.ProjectInfo">
    <result column="staffId" property="staffId" />
    <result column="partners" property="partners" />
    <result column="projectId" property="projectId" />
    <result column="projectName" property="projectName" />
    <result column="projectImgUrl" property="projectImgUrl" />
    <result column="showTime" property="showTime" />
    <result column="status" property="status" />
    <result column="visitType" property="visitType" />
    <result column="projectType" property="projectType" />
    <result column="companyId" property="companyId" />
    <result column="masterId" property="masterId" />
    <result column="updateTime" property="updateTime" />
  </resultMap>

  <select id="fetchData" parameterType="Object" resultMap="projectInfoMap">
    select staff_id staffId, `id`projectId, visit_name projectName, visit_time showTime, `status` status
    , img_url projectImgUrl, record_type visitType, visit_type projectType, company_id companyId
    from visit_record
    <where>
      `status` = #{status}
      <if test="startTime != null and  endTime != null">
        AND update_time BETWEEN #{startTime} AND #{endTime}
      </if>
    </where>
    Limit #{page}, #{pagesize}
  </select>

  <select id="fetchByGroup" parameterType="Object" resultMap="projectInfoMap">
    SELECT vr.staff_id staffId, vr.visit_partner partners, vr.`id` projectId, vr.visit_name projectName, vr.visit_time showTime, vr.`status` status
    , vr.img_url projectImgUrl, vr.record_type visitType, vr.visit_type projectType, vr.company_id companyId, vr.update_time updateTime
    FROM visit_record vr
    left JOIN inv_user_detail iud ON vr.staff_id = iud.user_id
    WHERE vr.`status` = #{status} and iud.`group` = #{group}
    limit #{page}, #{pagesize}
  </select>

  <select id="fetchByGroupNoPage" parameterType="Object" resultMap="projectInfoMap">
    SELECT vr.staff_id staffId, vr.visit_partner partners, vr.`id` projectId, vr.visit_name projectName, vr.visit_time showTime, vr.`status` status
    , vr.img_url projectImgUrl, vr.record_type visitType, vr.visit_type projectType, vr.company_id companyId, vr.update_time updateTime
    FROM visit_record vr
    left JOIN inv_user_detail iud ON vr.staff_id = iud.user_id
    WHERE vr.`status` = #{status} and iud.`group` = #{group}
  </select>

  <select id="fetchByStaffId" parameterType="Object" resultMap="projectInfoMap">
    SELECT vr.staff_id staffId, vr.visit_partner partners, `id` projectId, visit_name projectName, visit_time showTime, `status` status
    , img_url projectImgUrl, record_type visitType, visit_type projectType, company_id companyId
    FROM visit_record
    WHERE `status` = #{status} and staff_id = #{staffId}
    limit #{page}, #{pagesize}
  </select>

  <select id="queryProjectData" parameterType="Object" resultMap="projectInfoMap">
    select staff_id staffId, visit_partner partners, `id` projectId, visit_name projectName, visit_time showTime, `status` status
    , img_url projectImgUrl, record_type visitType, visit_type projectType, company_id companyId
    from visit_record
    where
    <if test="statusList !=null and statusList.size &gt; 0">
      `status` in
      <foreach close=")" collection="statusList" index="index" item="item" open="(" separator=",">
        #{item}
      </foreach>
    </if>
    order by update_time desc
    limit #{page}, #{pagesize}
  </select>

  <select id="countProjectData" parameterType="Object" resultType="java.lang.Integer">
    select count(1)
    from visit_record
    where
    <if test="statusList !=null and statusList.size &gt; 0">
      `status` in
      <foreach close=")" collection="statusList" index="index" item="item" open="(" separator=",">
        #{item}
      </foreach>
    </if>
    order by update_time desc
  </select>

  <select id="countDataByGroup" parameterType="Object" resultType="java.lang.Integer">
    SELECT count(1)
    FROM visit_record vr
    left JOIN inv_user_detail iud ON vr.staff_id = iud.user_id
    WHERE
    iud.`group` = #{group}
    <if test="statusList !=null and statusList.size &gt; 0">
      and vr.`status` in
      <foreach close=")" collection="statusList" index="index" item="item" open="(" separator=",">
        #{item}
      </foreach>
    </if>
  </select>

  <select id="fetchDataByGroup" parameterType="Object" resultMap="projectInfoMap">
    SELECT vr.staff_id staffId, vr.visit_partner partners, vr.`id` projectId, vr.visit_name projectName, vr.visit_time showTime, vr.`status` status
    , vr.img_url projectImgUrl, vr.record_type visitType, vr.visit_type projectType, vr.company_id companyId,
    vr.update_time updateTime
    FROM visit_record vr
    left JOIN inv_user_detail iud ON vr.staff_id = iud.user_id
    WHERE
    iud.`group` = #{group}
    <if test="statusList !=null and statusList.size &gt; 0">
      and vr.`status` in
      <foreach close=")" collection="statusList" index="index" item="item" open="(" separator=",">
        #{item}
      </foreach>
    </if>
    order by vr.update_time desc
  </select>
  <select id="fetchDataByGroupAndTime" parameterType="Object" resultMap="projectInfoMap">
    SELECT vr.staff_id staffId, vr.visit_partner partners, vr.`id` projectId, vr.visit_name projectName, vr.visit_time showTime, vr.`status` status
    , vr.img_url projectImgUrl, vr.record_type visitType, vr.visit_type projectType, vr.company_id companyId,
    vr.update_time updateTime
    FROM visit_record vr
    left JOIN inv_user_detail iud ON vr.staff_id = iud.user_id
    WHERE
    iud.`group` = #{group} and vr.update_time between #{startTime} and #{endTime}
    <if test="statusList !=null and statusList.size &gt; 0">
      and vr.`status` in
      <foreach close=")" collection="statusList" index="index" item="item" open="(" separator=",">
        #{item}
      </foreach>
    </if>
    order by vr.update_time desc
  </select>

  <select id="fetchDataByStaff" parameterType="Object" resultMap="projectInfoMap">
    select `id` projectId, visit_name projectName, visit_time showTime, `status` status, update_time updateTime
    , img_url projectImgUrl, record_type visitType, visit_type projectType, company_id companyId, master_id masterId
    from visit_record
    where staff_id = #{staffId}
  </select>

  <select id="fetchDataById" parameterType="Object" resultMap="projectInfoMap">
    select staff_id staffId, visit_partner partners, `id`projectId, visit_name projectName, visit_time showTime, `status` status
    , img_url projectImgUrl, record_type visitType, visit_type projectType, company_id companyId
    from visit_record
    where id = #{id}
  </select>

  <select id="fetchCountByStaffId" parameterType="Object" resultType="java.lang.Integer">
    select count(1)
    from visit_record
    <where>
      `status` = #{status}
      <if test="staffId != null">
        AND staff_id = #{staffId}
      </if>
      <if test="startTime != null and  endTime != null">
        AND create_time BETWEEN #{startTime} AND #{endTime}
      </if>
    </where>
  </select>

  <select id="fetchCountByStaffIdNew" parameterType="Object" resultType="java.lang.Integer">
    select count(1)
    from visit_record
    <where>
      visit_status = #{status}
      <if test="staffId != null">
        AND staff_id = #{staffId}
      </if>
      <if test="startTime != null and  endTime != null">
        AND create_time BETWEEN #{startTime} AND #{endTime}
      </if>
    </where>
  </select>

  <select id="fetchCountByGroup" parameterType="Object" resultType="java.lang.Integer">
    select count(1)
    FROM visit_record vr
    left JOIN inv_user_detail iud ON vr.staff_id = iud.user_id
    WHERE vr.`status` = #{status} and iud.`group` = #{group}
  </select>

  <select id="fetchLastDataLeader" parameterType="Object" resultMap="projectInfoMap">
      select `id` projectId, visit_name projectName, visit_time showTime, `status` status, update_time updateTime
      , img_url projectImgUrl, record_type visitType, visit_type projectType, company_id companyId
      from visit_record
      where `status` = #{status}
      order by update_time desc limit 1
  </select>


  <select id="fetchLastData" parameterType="Object" resultMap="projectInfoMap">
      SELECT vr.staff_id staffId, vr.visit_partner partners, vr.`id` projectId, vr.visit_name projectName, vr.visit_time showTime, vr.`status` status
      , vr.img_url projectImgUrl, vr.record_type visitType, vr.visit_type projectType, vr.company_id companyId,
      vr.update_time updateTime
      FROM visit_record vr
      left JOIN inv_user_detail iud ON vr.staff_id = iud.user_id
      WHERE vr.`status` = #{status} and iud.`group` = #{group}
      order by vr.update_time DESC
  </select>

  <select id="fetchVisitingData" parameterType="Object" resultMap="projectInfoMap">
    SELECT vr.staff_id staffId, vr.visit_partner partners, vr.`id` projectId, vr.visit_name projectName, vr.visit_time showTime, vr.`status` status
    , vr.img_url projectImgUrl, vr.record_type visitType, vr.visit_type projectType, vr.company_id companyId,
    vr.update_time updateTime
    FROM visit_record vr
    left JOIN inv_user_detail iud ON vr.staff_id = iud.user_id
    WHERE
    iud.`group` = #{group}
    <if test="statusList !=null and statusList.size &gt; 0">
      and vr.`status` in
      <foreach close=")" collection="statusList" index="index" item="item" open="(" separator=",">
        #{item}
      </foreach>
    </if>
    order by vr.update_time desc
  </select>
  <select id="selectByMasterId" resultType="java.lang.Integer">
    select user_dm from visit_record v
    INNER JOIN dm_cs_user u
    where v.staff_id = u.ding_userid and master_id = #{masterId}
  </select>
  <select id="selectXmIdBydeptDm" resultType="java.lang.String">
    select id from visit_record r, dm_cs_user u
    where r.staff_id = u.ding_userid and r.`status` != 10 and u.dept_dm = #{deptId}
  </select>
  <select id="queryRelDataByXmId" resultType="java.lang.String">
    select id from visit_record r, dm_cs_user u
    where r.staff_id = u.ding_userid and r.master_id = #{masterId} and u.user_dm =#{userId}
  </select>
  <select id="selectXmIdByMasterUser" resultType="java.lang.String">
    select id from visit_record r, dm_cs_user u
    where r.staff_id = u.ding_userid and r.status in (0,1,2,3,4,5,6,7)and u.user_dm =#{userId} and isDelete = 1
  </select>
  <select id="selectXmIdByOtherUser" resultType="java.lang.String">
    select master_id from visit_record r, dm_cs_user u
    where r.staff_id = u.ding_userid and r.status = 10 and u.user_dm =#{userId} and isDelete = 1
  </select>
  <select id="selectByVisitId" resultType="java.lang.Integer">
    select user_dm from visit_record v
    INNER JOIN dm_cs_user u
    where v.staff_id = u.ding_userid and v.id = #{visitId} and v.isDelete = 1
  </select>
  <select id="getAllDataByDeptDm" resultType="java.lang.String">
    select id from visit_record
    where isDelete = 1 and status in (0,1) and staff_id in (select ding_userid from dm_cs_user where dept_dm = #{deptId})
  </select>
    <update id="deleteByProjectId">
      update visit_record set isDelete = 0 where id = #{projectId}
    </update>
  <update id="deleteByMasterId">
    update visit_record set isDelete = 0 where master_id = #{projectId}
  </update>

</mapper>